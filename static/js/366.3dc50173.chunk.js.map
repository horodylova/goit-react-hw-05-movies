{"version":3,"file":"static/js/366.3dc50173.chunk.js","mappings":"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","sources":["api/config.js","api/apiOneMovie.js","components/Cast/Cast.jsx","components/Reviews/Reviews.jsx","pages/MovieDetailsPage.jsx"],"sourcesContent":["export const config = {\n    apiKey: 'a3419bb2c415f83d30bbc28c2bb776df',\n    baseUrl: 'https://api.themoviedb.org/3',\n  };\n  \n  ","import axios from 'axios';\nimport { config } from './config';\n\nconst { apiKey, baseUrl } = config;\n\nexport const getMovieDetails = async (movieId) => {\n  const url = `${baseUrl}/movie/${movieId}?api_key=${apiKey}`;\n\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieCredits = async (movieId) => {\n  const url = `${baseUrl}/movie/${movieId}/credits?api_key=${apiKey}`;\n\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async (movieId) => {\n  const url = `${baseUrl}/movie/${movieId}/reviews?api_key=${apiKey}`;\n\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};","import React from 'react';\n\nexport const Cast = ({ cast }) => {\n    return (\n        <div>\n          <h2>Cast</h2>\n          <ul>\n            {cast.map(actor => (\n              <li key={actor.id}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}\n                  alt={`${actor.name} profile`}\n                  style={{ width: '100px', height: '150px', objectFit: 'cover' }}\n                />\n                <p>{actor.name}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      );\n};\n\n \n\n\n","\nimport React, { useEffect } from 'react';\n\nexport const Reviews = ({ fetchReviews, reviews }) => {\n  useEffect(() => {\n    fetchReviews();\n  }, [fetchReviews]);\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <p>{review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No reviews available.</p>\n      )}\n    </div>\n  );\n};\n\n\n","\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieDetails, getMovieCredits, getMovieReviews } from '../api/apiOneMovie';\nimport { Link } from 'react-router-dom';\nimport { Cast } from '../components/Cast/Cast';\nimport { Reviews } from 'components/Reviews/Reviews';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [cast, setCast] = useState(null);\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const details = await getMovieDetails(movieId);\n        setMovieDetails(details);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  const fetchCast = async () => {\n    try {\n      const credits = await getMovieCredits(movieId);\n      setCast(credits.cast);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const fetchReviews = async () => {\n    try {\n      const movieReviews = await getMovieReviews(movieId);\n      setReviews(movieReviews.reviews);\n    } catch (error) {\n      console.error( error);\n    }\n  };\n\n  if (!movieDetails) {\n    return <div>Loading...</div>;\n  }\n\n  const { title, backdrop_path, genres, overview, release_date, vote_average } =\n    movieDetails;\n\n  return (\n    <div>\n      <h2>{title}</h2>\n      <img\n        src={`https://image.tmdb.org/t/p/w500${backdrop_path}`}\n        alt={`${title} backdrop`}\n        style={{ width: '100%', maxHeight: '400px', objectFit: 'cover' }}\n      />\n      <p>Genres: {genres.map(genre => genre.name).join(', ')}</p>\n      <p>Overview: {overview}</p>\n      <p>Release Date: {release_date}</p>\n      <p>Vote Average: {vote_average}</p>\n      <nav>\n        <ul>\n          <li>\n            <Link to={`cast`} onClick={fetchCast}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to={`reviews`} onClick={fetchReviews}>Reviews</Link>\n          </li>\n        </ul>\n      </nav>\n      {cast && <Cast cast={cast} />}\n      {reviews && <Reviews reviews={reviews}/>}\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["config","apiKey","baseUrl","getMovieDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movieId","url","response","_context","prev","next","concat","axios","sent","abrupt","data","t0","stop","_x","apply","arguments","getMovieCredits","_ref2","_callee2","_context2","_x2","getMovieReviews","_ref3","_callee3","_context3","_x3","Cast","cast","_jsxs","children","_jsx","map","actor","src","profile_path","alt","name","style","width","height","objectFit","id","Reviews","fetchReviews","reviews","useEffect","length","review","author","content","useParams","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","_useState3","_useState4","setCast","_useState5","_useState6","setReviews","fetchMovieDetails","details","console","error","fetchCast","credits","movieReviews","title","backdrop_path","genres","overview","release_date","vote_average","maxHeight","genre","join","Link","to","onClick"],"sourceRoot":""}